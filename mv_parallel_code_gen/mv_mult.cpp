#include "mv_mult.h"

void mv_mult(real y_out[SIZE],real x_in[SIZE])
{
	short i, j;
	float sum;

	// matrix 
	real H[SIZE][SIZE] = {0.3027644007766090,0.8216291607353428,0.8384960449380805,0.5225903490807078,0.8938979664452533,0.5155117521407628,0.7833286498677127,0.8743671715876262,0.3200355774664969,0.8392382403361952,0.5416738538980876,0.6449103841938444,0.5680724610077758,0.8801422074113273,0.1991380672057383,0.3339514799717586,0.6808457513972297,0.0150094986766163,0.9600986003690105,0.6287846000240738,0.1508729761497646,0.8179743408392451,0.3704135566321165,0.1729561412752366,0.2987230121022145,0.4329065961067291,0.4610951266566989,0.7679503900111414,0.7266317666418980,0.1337727484734263,0.6978984818598634,0.6602275564416024,0.7027399132403769,0.9797468967888410,0.6614425763823250,0.2259498681444465,0.5678287124288343,0.9708449392556234,0.4119532081686448,0.2071327296413550,0.3783730005126711,0.3419706182702157,0.5465711518291062,0.2714472586417999,0.2844085897499446,0.5798068732495990,0.7942106513726147,0.9900825926130626,0.7445657831061554,0.6071989445395304,0.8600116048868196,0.2897258958562381,0.4448802046729122,0.2523293468739903,0.4692242852110011,0.7603650098043441,0.0591825934710711,0.7888616922337526,0.2679472507093743,0.6298878488423081,0.8536551306627677,0.3411935694148835,0.6945672404255475,0.8757418998180744,0.0647811229632725,0.5298231167160661,0.6028690856669924,0.4386585337709120,0.4399243095653416,0.3704768260518963,0.5935629125396816,0.5340790176266005,0.6213101307954134,0.7373059884652557,0.9883349382776307,0.6405264989898353,0.0502688037468729,0.4983113034484805,0.9333801081895897,0.5751477790474685,0.4965524497031029,0.7271132169296769,0.7948210802009265,0.1365187422597097,0.5827916815612308,0.2090694044384200,0.4153748604432227,0.2139633315961663,0.6833323243384847,0.4514248267624767,0.8997691751696100,0.3092901597909578,0.9568434484448770,0.0117566873531180,0.4234962568510507,0.3798183703507911,0.3049986770034919,0.6434922878853500,0.2125598643387366,0.0438953253471440,};

	L1:for(i = 0; i < SIZE; i++)
	{
		#pragma HLS PIPELINE
		sum = 0;
		L2: for(j = 0; j < SIZE; j++)
		{
			sum += H[i][j]*x_in[j];
		}
		y_out[i] = sum;
	}
}
